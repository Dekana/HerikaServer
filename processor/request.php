<?php
/*
 Request creation and player_request overriding
*/

if ($gameRequest[0] == "funcret") { // Take out the functions part

	$returnFunction = explode("@", $gameRequest[3]); // Function returns here
	$functionCodeName=$returnFunction[1];
		
	//$request = str_replace("call function if needed,", "continue chat as $HERIKA_NAME,", $PROMPTS["inputtext"][0]); 
	if (isset($PROMPTS["afterfunc"]["cue"][$functionCodeName])) {
		$request =$PROMPTS["afterfunc"]["cue"][$functionCodeName];
	
	} else 
		$request =$PROMPTS["afterfunc"]["cue"]["default"];
	
	/*
	Functions of which return value is provided by server
	$returnFunction is in the form command@function codename@function parameter@result
	So here we will override the result (which probably will be nothing)
	*/
	
	if ($functionCodeName == "ReadQuestJournal") {
		$returnFunction[3] = DataQuestJournal($returnFunction[2]); // Overwrite funrect content with info from database
		$gameRequest[3] .= $returnFunction[3];						// Add also to $gameRequest 
	
		if (!isset($GLOBALS["CACHE_PEOPLE"])) {
			$GLOBALS["CACHE_PEOPLE"]=DataBeingsInRange();
		} 
    
		if (!isset($GLOBALS["CACHE_LOCATION"])) {
			$GLOBALS["CACHE_LOCATION"]=DataLastKnownLocation();
		}  
		
		if (!isset($GLOBALS["CACHE_PARTY"])) {
			$GLOBALS["CACHE_PARTY"]=DataGetCurrentPartyConf();
		} 

		// Store info.
		$db->insert(
			'eventlog',
			array(
				'ts' => $gameRequest[1],
				'gamets' => $gameRequest[2],
				'type' => 'chat',
				'data' => "The Narrator. {$GLOBALS["HERIKA_NAME"]} reads in quest journal:".prettyPrintJson($returnFunction[3]),
				'sess' => 'pending',
				'localts' => time(),
				'people'=> $GLOBALS["CACHE_PEOPLE"],
				'location'=>$GLOBALS["CACHE_LOCATION"],
				'party'=>$GLOBALS["CACHE_PARTY"]
			)
		);
		
		
	} else if ($functionCodeName == "SearchDiary") {
		
		$returnFunction[3] = DataDiaryLogIndex($returnFunction[2]);	// Overwrite funrect content with info from database
		$gameRequest[3] .= $returnFunction[3];							// Add also to $gameRequest 
		
		
	}  else if ($functionCodeName == "ReadDiaryPage") {
		
		$returnFunction[3] = DataDiaryLog($returnFunction[2]); // Overwrite funrect content with info from database
		$gameRequest[3] .= $returnFunction[3];					// Add also to $gameRequest 
		
	} else if ($functionCodeName == "SetCurrentTask") {
		// "Task" here is the last motto. "Let's take the hobbits to Isengard"->Current task should be "Travel to Isengard"
		$returnFunction[3] .= "ok"; // This is always ok
		$gameRequest[3].="done";
		// This table is a stack whithout pop.
		$db->insert(
			'currentmission',
			array(
				'ts' => $gameRequest[1],
				'gamets' => $gameRequest[2],
				'description' => SQLite3::escapeString($returnFunction[2]),
				'sess' => 'pending',
				'localts' => time()
			)
		);
		die();
	} else if ($functionCodeName == "Attack") {
		if (strpos($returnFunction[3],"Error")!==false) {
			$GLOBALS["FUNCTIONS_ARE_ENABLED"]=false;	// RE-Enable functions	// Endless loop if enabled
			$request="Specify a valid target:(available targets: ".implode(",",$GLOBALS["FUNCTION_PARM_INSPECT"]).")";	
			error_log("Request function again {$returnFunction[3]}");
		}
		
	}  else {
		if (isset($GLOBALS["FUNCSERV"][$functionCodeName])) {
			call_user_func_array($GLOBALS["FUNCSERV"][$functionCodeName],[]);
		}
		
	}
	
} else if ($gameRequest[0] == "chatnf_book") { // Takea out the functions part
	if ($GLOBALS[""]) {
		
		$books=$db->fetchAll("select title from books where title is not null order by gamets desc");
		// Override player request here. This request is generated by dll plugin, in english.
		$gameRequest[3]=$PROMPTS["book"]["player_request"][0]." ".$books[0]["title"];	
		$request.=$gameRequest[3];
		
	} else {
		$request = selectRandomInArray($PROMPTS["book"]["cue"]);
		$books=$db->fetchAll("select title from books where title is not null order by gamets desc");
		// Override player request here. This request is generated by dll plugin, in english.
		$gameRequest[3]=$PROMPTS["book"]["player_request"][0]." ".$books[0]["title"];	
		$request.=$gameRequest[3];
	}
	
	
} else if ($gameRequest[0] == "memory") {
	
	$memoriesFound=queryMemory($gameRequest[3],null,$GLOBALS["HERIKA_NAME"]);
	$GLOBALS["DEBUG_DATA"]["memories"]["selected"]=current($memoriesFound["content"]);
	$GLOBALS["MEMORY_INJECTION_RESULT"]=$GLOBALS["DEBUG_DATA"]["memories"]["selected"]["briefing"];
	
	$request=strtr(selectRandomInArray($PROMPTS[$gameRequest[0]]["cue"]),["#MEMORY_INJECTION_RESULT#"=>$GLOBALS["MEMORY_INJECTION_RESULT"]]);
	
	
} else if ($gameRequest[0] == "diary") {
	$request = selectRandomInArray($PROMPTS["diary"]["cue"]);
	$GLOBALS["FORCE_MAX_TOKENS"]=$GLOBALS["CONNECTOR"][DMgetCurrentModel()]["MAX_TOKENS_MEMORY"];

	logMemory($GLOBALS["PLAYER_NAME"], $GLOBALS["HERIKA_NAME"],
        "(Important note: Something important happened here for {$GLOBALS["PLAYER_NAME"]}. You should use the tag #PlotRelevantEvent)",
        $momentum, $gameRequest[2],'diary_intent',$gameRequest[1]);

} else {

	
	if (isset($PROMPTS[$gameRequest[0]]["player_request"])) {
		$request = selectRandomInArray($PROMPTS[$gameRequest[0]]["cue"]); // Add support for arrays here	
		$gameRequest[3]=selectRandomInArray($PROMPTS[$gameRequest[0]]["player_request"]);	// Overwrite
		// error_log(__FILE__." ".__LINE__." $request {$gameRequest[3]}");
	}
	else {
		if (isset($PROMPTS[$gameRequest[0]]["cue"]))

			$request = selectRandomInArray($PROMPTS[$gameRequest[0]]["cue"]); // Add support for arrays here	
	}
}






$commandSent = false;

// Add
if (($gameRequest[0] == "inputtext") || ($gameRequest[0] == "inputtext_s") || (strpos($gameRequest[0],"chatnf")!==false)) {
	$gameRequest[3] = $gameRequest[3]." $DIALOGUE_TARGET";
}

?>
